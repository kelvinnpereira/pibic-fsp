
First & follow symbols:
----------------------

FSP
first:   uppercase_id "||" "const" "range" 
follow:  EOF 

start
first:   uppercase_id "||" "const" "range" 
follow:  uppercase_id "TRACE" "||" "const" "range" 

trace
first:   "TRACE" 
follow:  EOF 

trace_action
first:   uppercase_id lowercase_id 
follow:  "->" "ENDTRACE" 

primitive_process
first:   uppercase_id 
follow:  uppercase_id "TRACE" "||" "const" "range" 

constant_declaration
first:   "const" 
follow:  uppercase_id "TRACE" "||" "const" "range" 

range_declaration
first:   "range" 
follow:  uppercase_id "TRACE" "||" "const" "range" 

composite_process
first:   "||" 
follow:  uppercase_id "TRACE" "||" "const" "range" 

expr
first:   integer uppercase_id lowercase_id "(" 
follow:  uppercase_id lowercase_id "TRACE" ")" ">" "<" ">=" "<=" "==" "&&" 
         "||" "!" "!=" "const" "range" ".." ":" "]" "{" "," "then" 

term
first:   integer uppercase_id lowercase_id "(" 
follow:  uppercase_id lowercase_id "TRACE" "+" "-" ")" ">" "<" ">=" "<=" "==" 
         "&&" "||" "!" "!=" "const" "range" ".." ":" "]" "{" "," "then" 

factor
first:   integer uppercase_id lowercase_id "(" 
follow:  uppercase_id lowercase_id "TRACE" "+" "-" "*" "/" ")" ">" "<" ">=" 
         "<=" "==" "&&" "||" "!" "!=" "const" "range" ".." ":" "]" "{" "," 
         "then" 

boolean_expr
first:   integer uppercase_id lowercase_id "(" 
follow:  lowercase_id "{" "then" 

index
first:   "[" 
follow:  uppercase_id lowercase_id "->" "ENDTRACE" "+" "/" "(" ")" "=" "[" ":" 
         "." "{" "," "}" "\\" "@" "forall" "|" "if" "else" 

index_label
first:   "[" 
follow:  "->" "ENDTRACE" "/" "=" ":" "." "," "}" 

simple_action
first:   lowercase_id 
follow:  "->" "/" ":" "." "," "}" 

action
first:   lowercase_id 
follow:  "->" "/" ":" "," "}" 

action_set
first:   "{" 
follow:  "->" "/" ")" "." "\\" "@" 

alphabet_extension
first:   "+" 
follow:  "/" ")" "\\" "@" 

label_visibility
first:   "\\" "@" 
follow:  "/" ")" "." 

hide_label
first:   "\\" 
follow:  "/" ")" "." 

expose_label
first:   "@" 
follow:  "/" ")" "." 

relabels
first:   "/" 
follow:  ")" "." 

relabel_set
first:   "{" 
follow:  ")" "." "," "}" 

relabel
first:   lowercase_id "forall" 
follow:  "," "}" 

simple_relabel
first:   lowercase_id 
follow:  "," "}" 

parameter_list
first:   uppercase_id 
follow:  ")" 

local_process
first:   uppercase_id "STOP" "ERROR" 
follow:  "->" "+" "/" ")" "." "," "\\" "@" "|" "else" 

primitive_process_body
first:   uppercase_id lowercase_id "{" "STOP" "ERROR" "when" "if" 
follow:  ")" 

parameter
first:   uppercase_id 
follow:  ")" "," 

process_body
first:   uppercase_id lowercase_id "{" "STOP" "ERROR" "when" "if" 
follow:  "->" "+" "/" ")" "\\" "@" "|" "else" 

choice
first:   lowercase_id "{" "when" 
follow:  "->" "+" "/" ")" "\\" "@" "|" "else" 

condition
first:   "if" 
follow:  "->" "+" "/" ")" "\\" "@" "|" "else" 

composite_body
first:   uppercase_id lowercase_id "(" "forall" "if" 
follow:  "/" ")" "||" "." "\\" "@" "else" 

process_instance
first:   uppercase_id lowercase_id 
follow:  "/" ")" "||" "." "\\" "@" "else" 

parallel_list
first:   "(" 
follow:  "/" ")" "||" "." "\\" "@" "else" 

composite_conditional
first:   "if" 
follow:  "/" ")" "||" "." "\\" "@" "else" 

compositi_replicator
first:   "forall" 
follow:  "/" ")" "||" "." "\\" "@" "else" 

actual_parameter_list
first:   integer uppercase_id lowercase_id "(" 
follow:  ")" 

